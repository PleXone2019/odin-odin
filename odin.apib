FORMAT: 1A

# ODIN API
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam augue tellus,
malesuada ut congue fermentum, tincidunt a massa. Nunc accumsan nec urna quis fringilla.

# Group Users

## User [/users/:id]
+ Parameters
    + id: dogPzIz8 (string, required)

+ Attributes (User Base)
    + password: security123 (string, required)


### Retrieve a User [GET]
Retrieves the user with the given ID.

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get User Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Update a User [PATCH]
Updates the user with the given ID.


+ Request
    + Attributes (User Base)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Delete a User [DELETE]
Delete the user with the given ID

+ Response 204 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get User Head [HEAD]

Get the user Head with the given ID

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get User Options [OPTIONS]

Get the user options with the given ID

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

===========================================================================

## Users  [/users]
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam augue tellus,
malesuada ut congue fermentum, tincidunt a massa.
Nunc accumsan nec urna quis fringilla.

### Retrieve all users [GET]
Get all users

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get User Collection Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Create a User [POST]
Creates a User

+ Request
    + Attributes (User Base)

+ Response 201 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get Users Head [HEAD]

Get the users Head

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get Users Options [OPTIONS]

Get the users options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

======================================================================================

## User login  [/users/login]
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam augue tellus, malesuada ut congue fermentum, tincidunt a massa. Nunc accumsan nec urna quis fringilla. Fusce ut nunc in libero consectetur bibendum volutpat eget odio.

### Login a user [POST]
+ Attributes
    + username: john_doe (string, required)
    + password: security123 (string, required)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get Login Head [HEAD]

Get the users Head

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get Login Options [OPTIONS]

Get the users options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

=================================================================================================

## User first  [/users/first]

### Get first user [GET]
Get first user

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get User Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get First User Head [HEAD]

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get First User Options [OPTIONS]

Get the users options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

## User last  [/users/last]

### Get last user [GET]
Get last user

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get User Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get last User Head [HEAD]

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get last User Options [OPTIONS]

Get the users options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

## User count  [/users/count]

### Get count user [GET]
Get count user

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Count Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get count User Head [HEAD]

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get count User Options [OPTIONS]

Get the users options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

=============================================================================
=============================================================================

# Group Datasets

## Dataset [/datasets/:id]
+ Parameters
    + id: dogPzIz8 (string, required)

+ Attributes (Dataset Base)
    + id: dogPzIz8 (string, required)
    + createdAt: 1415203908 (string) - datetime
    + updatedAt: 1415203908 (string) - datetime

### Retrieve a Dataset [GET]
Retrieves the Dataset with the given ID.

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Dataset Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Update a Dataset [PATCH]
Updates the Dataset with the given ID.

+ Request
    + Attributes (Dataset Base)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Delete a Dataset [DELETE]
Delete the Dataset with the given ID

+ Response 204 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get Dataset Head [HEAD]

Get the Dataset Head with the given ID

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get Dataset Options [OPTIONS]

Get the Dataset options with the given ID

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

===========================================================================
## Dataset download [/datasets/:id/download]

+ Parameters
    + id: dogPzIz8 (string, required)

### Retrieve a Dataset [GET]
Download the Dataset with the given ID.

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Dataset Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

===========================================================================

## Datasets  [/datasets]
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam augue tellus,
malesuada ut congue fermentum, tincidunt a massa.
Nunc accumsan nec urna quis fringilla.

### Retrieve all Datasets [GET]
Get all Datasets

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Dataset Collection Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Create a Dataset [POST]
Creates a Dataset

+ Request
    + Attributes (Dataset Base)

+ Response 201 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get Datasets Head [HEAD]

Get the Datasets Head

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get Datasets Options [OPTIONS]

Get the Datasets options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

======================================================================================

## Dataset first  [/datasets/first]

### Get first Dataset [GET]
Get first Dataset

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Dataset Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get First Dataset Head [HEAD]

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get First Dataset Options [OPTIONS]

Get the Datasets options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

## Dataset last  [/datasets/last]

### Get last Dataset [GET]
Get last Dataset

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Dataset Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get last Dataset Head [HEAD]

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get last Dataset Options [OPTIONS]

Get the Datasets options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

## Dataset count  [/datasets/count]

### Get count Dataset [GET]
Get count Dataset

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Count Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get count Dataset Head [HEAD]

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get count Dataset Options [OPTIONS]

Get the Datasets options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

===========================================================
===========================================================

# Group Categories

## Category [/categories/:id]
+ Parameters
    + id: dogPzIz8 (string, required)

+ Attributes (Category Base)
    + id: dogPzIz8 (string, required)
    + createdAt: 1415203908 (string) - datetime
    + updatedAt: 1415203908 (string) - datetime

### Retrieve a Category [GET]
Retrieves the Category with the given ID.

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Category Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Update a Category [PATCH]
Updates the Category with the given ID.


+ Request
    + Attributes (Category Base)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Delete a Category [DELETE]
Delete the Category with the given ID

+ Response 204 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get Category Head [HEAD]

Get the Category Head with the given ID

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get Category Options [OPTIONS]

Get the Category options with the given ID

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

===========================================================================

## Categories  [/categories]
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam augue tellus,
malesuada ut congue fermentum, tincidunt a massa.
Nunc accumsan nec urna quis fringilla.

### Retrieve all Categories [GET]
Get all Categories

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Category Collection Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Create a Category [POST]
Creates a Category

+ Request
    + Attributes (Category Base)

+ Response 201 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get Categories Head [HEAD]

Get the Categories Head

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get Categories Options [OPTIONS]

Get the Categories options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

======================================================================================

## Category first  [/categories/first]

### Get first Category [GET]
Get first Category

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Category Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get First Category Head [HEAD]

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get First Category Options [OPTIONS]

Get the Categories options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

## Category last  [/categories/last]

### Get last Category [GET]
Get last Category

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Category Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get last Category Head [HEAD]

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get last Category Options [OPTIONS]

Get the Categories options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

## Category count  [/categories/count]

### Get count Category [GET]
Get count Category

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Count Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get count Category Head [HEAD]

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

### Get count Category Options [OPTIONS]

Get the Categories options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

===========================================================
===========================================================

# Group Logs

## Log [/logs/:id]
+ Parameters
    + id: dogPzIz8 (string, required)

+ Attributes (Log Base)
    + id: dogPzIz8 (string, required)
    + action: create (string, required)
    + target: user (string, required)
    + user: dogPzIz8 (string, required)
    + createdAt: 1415203908 (string) - datetime
    + updatedAt: 1415203908 (string) - datetime


### Retrieve a Log [GET]

Retrieves the Log entry with the given ID.

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Category Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Update a Log [PATCH]

Updates the Log entry with the given ID.

+ Request
    + Attributes (Log Base)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Delete a Log [DELETE]

Deletes the Log entry with the given ID

+ Response 204 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Get Log Head [HEAD]

Gets the Log Head with the given ID

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Get Log Options [OPTIONS]

Gets the Log options with the given ID

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

===========================================================================

## Logs  [/logs]
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam augue tellus,
malesuada ut congue fermentum, tincidunt a massa.
Nunc accumsan nec urna quis fringilla.


### Retrieve all Logs [GET]

Gets all Logs

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Log Collection Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Create a Log [POST]

Creates a Log

+ Request
    + Attributes (Log Base)

+ Response 201 (application/json; charset=utf-8)
    + Attributes (General Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Get Logs Head [HEAD]

Gets the Logs Head

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Get Logs Options [OPTIONS]

Get the Logs options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)

======================================================================================

## Log first  [/logs/first]


### Get first Log [GET]

Gets the first Log entry

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Log Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Get First Log Head [HEAD]

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Get First Log Options [OPTIONS]

Gets the first Log options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


## Log last  [/categories/last]


### Get last Log [GET]

Gets the last Log entry

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Category Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Get last Log Head [HEAD]

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Get last Log Options [OPTIONS]

Gets the last Log options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


## Log count  [/logs/count]


### Get count Log [GET]

Gets the Log entry count

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Get Count Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Get count Log Head [HEAD]

+ Response 200

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


### Get count Log Options [OPTIONS]

Gets the Logs options

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Options Response)

+ Response 403 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (Response Error)

+ Response 500 (application/json; charset=utf-8)
    + Attributes (Response Error)


# Data Structure

## User Base (object)
+ username: john_doe (string,required)
+ email: johndoe@example.com (string,required)
+ firstName: john (string)
+ lastName: doe (string)
+ avatar: http://site.com/avatar/dogPzIz8 (string)
+ organization: lpgB47a1 (string, required)
+ active: true (boolean)
+ deletedAt: 1231245 (string,nullable) - datetime

## User Get (object)
+ username: john_doe (string,required)
+ email: johndoe@example.com (string,required)
+ firstName: john (string)
+ lastName: doe (string)
+ avatar: http://site.com/avatar/dogPzIz8 (string)
+ organization: lpgB47a1 (string, required)
+ active: true (boolean)
+ deletedAt: 1231245 (string) - datetime
+ id: dogPzIz8 (string, required)
+ createdAt: 1415203908 (string) - datetime
+ updatedAt: 1415203908 (string) - datetime
+ createdBy: hwX6aOr7 (string, required)

## Get User Response (object)
+ meta (Metadata Response)
+ data (User Get)
+ links (object)


## Dataset Base (object)
+ name: examplename (string,required)
+ description: description of dataset (string)
+ notes: some notes about the dataset (string)
+ visibility: true (boolean)
+ starred: true (boolean)
+ optional1: some optional data (string)
+ optional2: some optional data (string)
+ optional3: some optional data (string)
+ optional4: some optional data (string)
+ optional5: some optional data (string)
+ optional6: some optional data (string)
+ optional7: some optional data (string)
+ optional8: some optional data (string)
+ optional9: some optional data (string)
+ optional10: some optional data (string)
+ publishedAt: 1415203908 (string) - datetime
+ category: PPBqWA9(string)
+ status: hwX6aOr7 (string)
+ organization: a4vhAoFG (string)
+ createdBy: nYrnfYEv (string)
+ owner: nYrnFyEv (string, required)


## Category Base (object)
+ name: name of the category (string, required)
+ description: description the category (string)
+ createdBy: nYrnfYEv (string)

## Get Category Response (object)
+ meta (Metadata Response)
+ data (Category)
+ links (object)


## Log Base (object)
+ action: the action that was performed (string, required)
+ target: the model the action was performed upon (string, required)
+ user: the user who performed the action (string, required)

## Get Log Response (object)
+ meta (Metadata Response)
+ data (Category)
+ links (object)



## Get User Collection Response (object)
+ meta (Metadata Response)
+ data (array[User Get])
+ links (object)

## Get Dataset Collection Response (object)
+ meta (Metadata Response)
+ data (array[Dataset])
+ links (object)

## Get Dataset Response (object)
+ meta (Metadata Response)
+ data (Dataset)
+ links (object)

## Get Category Collection Response (object)
+ meta (Metadata Response)
+ data (array[Category])
+ links (object)

## Get Log Collection Response (object)
+ meta (Metadata Response)
+ data (array[Category])
+ links (object)



## General Response (object)
+ meta (Metadata Response)
+ links (object)

## General Response Error (object)
+ meta (Metadata Response)
+ links (object)

## Options Response (object)
+ meta (Metadata Response)
+ methods (array[Methods Response])



## Response Error (object)
+ meta (Metadata Response)
+ error (object)
+ links (object)

## Get Count Response
+ meta (Metadata Response)
+ data (object)
+ links (object)

## Metadata Response (object)
+ statusCode
+ statusMessage

## Methods Response (object)
+ url (string)
+ headers (object)
+ parameters (object)